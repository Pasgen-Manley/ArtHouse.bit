{"version":3,"sources":["components/NavBar/index.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","utils/queries.js","pages/UploadForm.js","components/ProjectList/index.js","pages/ExploreNFTs.js","App.js","index.js"],"names":["WithSubnavigation","useDisclosure","isOpen","onToggle","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","align","flex","md","ml","display","onClick","icon","Close","w","h","Hamburger","variant","justify","textAlign","useBreakpointValue","fontFamily","direction","spacing","as","fontSize","fontWeight","href","padding","_hover","in","animateOpacity","DesktopNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","trigger","placement","p","to","textDecoration","label","children","border","boxShadow","rounded","minW","child","DesktopSubNav","subLabel","role","transition","_groupHover","transform","opacity","ChevronRightIcon","MobileNav","MobileNavItem","Link","ChevronDownIcon","style","marginTop","mt","pl","borderLeft","LOGIN_USER","gql","ADD_USER","ADD_PROJECT","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","Auth","maxW","onSubmit","id","className","placeholder","type","onChange","sm","colorScheme","message","alt","objectFit","src","Signup","username","addUser","mx","QUERY_PROJECTS","ProjectForm","projectName","setProjectName","description","setDescription","website","setWebsite","twitter","setTwitter","discord","setDiscord","openSea","setOpenSea","setCharacterCount","update","cache","addProject","projects","readQuery","query","writeQuery","e","setReleaseDate","length","ProjectList","divider","left","boxSize","right","_id","ExploreNFTs","useQuery","loading","title","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","UploadForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daf4bee7.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Button,\r\n  Stack,\r\n  Collapse,\r\n  Icon,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport {\r\n  HamburgerIcon,\r\n  CloseIcon,\r\n  ChevronDownIcon,\r\n  ChevronRightIcon,\r\n} from '@chakra-ui/icons';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function WithSubnavigation() {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        color={useColorModeValue('gray.600', 'white')}\r\n        minH={'60px'}\r\n        py={{ base: 2 }}\r\n        px={{ base: 4 }}\r\n        borderBottom={1}\r\n        borderStyle={'solid'}\r\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n        align={'center'}>\r\n        <Flex\r\n          flex={{ base: 1, md: 'auto' }}\r\n          ml={{ base: -2 }}\r\n          display={{ base: 'flex', md: 'none' }}>\r\n          <IconButton\r\n            onClick={onToggle}\r\n            icon={\r\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\r\n            }\r\n            variant={'ghost'}\r\n            aria-label={'Toggle Navigation'}\r\n          />\r\n        </Flex>\r\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n          <Text\r\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n            fontFamily={'heading'}\r\n            color={useColorModeValue('gray.800', 'white')}>\r\n            ArtHouse.bit\r\n          </Text>\r\n\r\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\r\n            <DesktopNav />\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Stack\r\n          flex={{ base: 1, md: 0 }}\r\n          justify={'flex-end'}\r\n          direction={'row'}\r\n          spacing={6}>\r\n          <Button\r\n            as={'a'}\r\n            fontSize={'sm'}\r\n            fontWeight={400}\r\n            variant={'link'}\r\n            href={'/login'}>\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            display={{ base: 'none', md: 'inline-flex' }}\r\n            fontSize={'sm'}\r\n            fontWeight={600}\r\n            color={'white'}\r\n            bg={'pink.400'}\r\n            padding={2}\r\n            as={'a'}\r\n            variant={'link'}\r\n            href={'/signUp'}\r\n            _hover={{\r\n              bg: 'pink.300',\r\n            }}>\r\n            Sign Up\r\n          </Button>\r\n        </Stack>\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity>\r\n        <MobileNav />\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst DesktopNav = () => {\r\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\r\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\r\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\r\n\r\n  return (\r\n    <Stack direction={'row'} spacing={4}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <Box key={navItem.label}>\r\n          <Popover trigger={'hover'} placement={'bottom-start'}>\r\n            <PopoverTrigger>\r\n              <Link\r\n                p={2}\r\n                to={navItem.to ?? '#'}\r\n                fontSize={'sm'}\r\n                fontWeight={500}\r\n                color={linkColor}\r\n                _hover={{\r\n                  textDecoration: 'none',\r\n                  color: linkHoverColor,\r\n                }}>\r\n                {navItem.label}\r\n              </Link>\r\n            </PopoverTrigger>\r\n\r\n            {navItem.children && (\r\n              <PopoverContent\r\n                border={0}\r\n                boxShadow={'xl'}\r\n                bg={popoverContentBgColor}\r\n                p={4}\r\n                rounded={'xl'}\r\n                minW={'sm'}>\r\n                <Stack>\r\n                  {navItem.children.map((child) => (\r\n                    <DesktopSubNav key={child.label} {...child} />\r\n                  ))}\r\n                </Stack>\r\n              </PopoverContent>\r\n            )}\r\n          </Popover>\r\n        </Box>\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst DesktopSubNav = ({ label, to, subLabel }) => {\r\n  return (\r\n    <Link\r\n      to={to}\r\n      role={'group'}\r\n      display={'block'}\r\n      p={2}\r\n      rounded={'md'}\r\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\r\n      <Stack direction={'row'} align={'center'}>\r\n        <Box>\r\n          <Text\r\n            transition={'all .3s ease'}\r\n            _groupHover={{ color: 'pink.400' }}\r\n            fontWeight={500}>\r\n            {label}\r\n          </Text>\r\n          <Text fontSize={'sm'}>{subLabel}</Text>\r\n        </Box>\r\n        <Flex\r\n          transition={'all .3s ease'}\r\n          transform={'translateX(-10px)'}\r\n          opacity={0}\r\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n          justify={'flex-end'}\r\n          align={'center'}\r\n          flex={1}>\r\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n        </Flex>\r\n      </Stack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst MobileNav = () => {\r\n  return (\r\n    <Stack\r\n      bg={useColorModeValue('white', 'gray.800')}\r\n      p={4}\r\n      display={{ md: 'none' }}>\r\n      {NAV_ITEMS.map((navItem) => (\r\n        <MobileNavItem key={navItem.label} {...navItem} />\r\n      ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst MobileNavItem = ({ label, children, to }) => {\r\n  const { isOpen, onToggle } = useDisclosure();\r\n\r\n  return (\r\n    <Stack spacing={4} onClick={children && onToggle}>\r\n      <Flex\r\n        py={2}\r\n        as={Link}\r\n        to={to ?? '#'}\r\n        justify={'space-between'}\r\n        align={'center'}\r\n        _hover={{\r\n          textDecoration: 'none',\r\n        }}>\r\n        <Text\r\n          fontWeight={600}\r\n          color={useColorModeValue('gray.600', 'gray.200')}>\r\n          {label}\r\n        </Text>\r\n        {children && (\r\n          <Icon\r\n            as={ChevronDownIcon}\r\n            transition={'all .25s ease-in-out'}\r\n            transform={isOpen ? 'rotate(180deg)' : ''}\r\n            w={6}\r\n            h={6}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n        <Stack\r\n          mt={2}\r\n          pl={4}\r\n          borderLeft={1}\r\n          borderStyle={'solid'}\r\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n          align={'start'}>\r\n          {children &&\r\n            children.map((child) => (\r\n              <Link key={child.label} py={2} to={child.to}>\r\n                {child.label}\r\n              </Link>\r\n            ))}\r\n        </Stack>\r\n      </Collapse>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst NAV_ITEMS = [\r\n  {\r\n    label: 'Explore NFTs',\r\n    to: '/explore',\r\n  },\r\n  {\r\n    label: 'Share Your Project',\r\n    to: '/share',\r\n  },\r\n  {\r\n    label: 'Contact',\r\n    to: '/contact',\r\n  },\r\n];","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_PROJECT = gql`\r\n  mutation addProject($projectName: String!, $description: String!, $website: String, $twitter: String, $discord: String, $openSea: String) {\r\n    addProject(projectName: $projectName, description: $description, website: $website, twitter: $twitter, discord: $discord, openSea: $openSea) {\r\n      _id\r\n      projectName\r\n      description\r\n      website\r\n      twitter\r\n      discord\r\n      openSea\r\n    }\r\n  }\r\n`;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import {\r\n  Button,\r\n  Checkbox,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Stack,\r\n  Image,\r\n} from '@chakra-ui/react';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: ''});\r\n  const [login, {error, data }] = useMutation(LOGIN_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Stack minH={'100vh'} direction={{ base: 'column', md: 'row' }}>\r\n      <Flex p={8} flex={1} align={'center'} justify={'center'}>\r\n        <Stack spacing={4} w={'full'} maxW={'md'}>\r\n          <Heading fontSize={'2xl'}>Sign in to your account</Heading>\r\n          {data ? (\r\n              <p>\r\n                Success! Taking you {' '}\r\n                <Link to=\"/\">Explore NFTs.</Link>\r\n              </p>\r\n            ) : (\r\n          <form onSubmit={handleFormSubmit}>\r\n            <FormControl id=\"email\">\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input \r\n                className=\"form-input\"\r\n                id=\"form-input\"\r\n                placeholder=\"Your email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"password\">\r\n              <FormLabel>Password</FormLabel>\r\n              <Input \r\n                className=\"form-input\"\r\n                id=\"form-input\"\r\n                placeholder=\"Your email\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <Stack spacing={6}>\r\n              <Stack\r\n                direction={{ base: 'column', sm: 'row' }}\r\n                align={'start'}\r\n                justify={'space-between'}>\r\n              </Stack>\r\n              <Button \r\n                colorScheme={'blue'} \r\n                variant={'solid'}\r\n                type=\"submit\"\r\n              >\r\n                Sign in\r\n              </Button>        \r\n            </Stack>\r\n          </form>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"my-3 p-3 bg-danger text-white\">\r\n          {error.message}\r\n        </div>\r\n        )}  \r\n        </Stack>\r\n      </Flex>\r\n      <Flex flex={1}>\r\n        <Image\r\n          alt={'Login Image'}\r\n          objectFit={'cover'}\r\n          src={\r\n            'https://www.artblocks.io/_next/image?url=https%3A%2F%2Fartblocks-mainnet.s3.amazonaws.com%2F78000041.png&w=1920&q=75'\r\n          }\r\n        />\r\n      </Flex>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      minH={'100vh'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      bg={useColorModeValue('gray.50', 'gray.800')}>\r\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\r\n        <Stack align={'center'}>\r\n          <Heading fontSize={'4xl'}>Sign Up to Post Your Very Own NFT Project!</Heading>\r\n        </Stack>\r\n        <Box\r\n          rounded={'lg'}\r\n          bg={useColorModeValue('white', 'gray.700')}\r\n          boxShadow={'lg'}\r\n          p={8}>\r\n          {data ? (\r\n          <p>\r\n            Success! You may now head{' '}\r\n            <Link to=\"/explore\">back to the homepage.</Link>\r\n          </p>\r\n        ) : (\r\n          <form onSubmit={handleFormSubmit}>\r\n            <Stack spacing={4}>\r\n              <FormControl id=\"username\">\r\n                <FormLabel>Username</FormLabel>\r\n                <Input \r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange} \r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"email\">\r\n                <FormLabel>Email</FormLabel>\r\n                <Input \r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange} \r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"password\">\r\n                <FormLabel>Password</FormLabel>\r\n                <Input \r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"***********\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange} \r\n                />\r\n              </FormControl>\r\n              <Stack spacing={10}>\r\n                <Button\r\n                  type=\"sumbmit\"\r\n                  bg={'blue.400'}\r\n                  color={'white'}\r\n                  _hover={{\r\n                    bg: 'blue.500',\r\n                  }}>\r\n                  Sign Up\r\n                </Button>\r\n              </Stack>\r\n            </Stack>\r\n          </form>\r\n        )}\r\n          {error && (\r\n            <div className=\"my-3 p-3 bg-danger text-white\">\r\n              {error.message}\r\n            </div>\r\n          )}\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Signup;","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_USER = gql`\r\n  query user($username: String!) {\r\n    user(username: $username) {\r\n      _id\r\n      username\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_PROJECTS = gql`\r\n  query projects {\r\n    projects {\r\n      _id\r\n      projectName\r\n      description\r\n      website\r\n      twitter\r\n      discord\r\n      openSea\r\n    }\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_PROJECT } from '../utils/mutations';\r\nimport { QUERY_PROJECTS } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Textarea,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nconst ProjectForm = () => {\r\n  const [projectName, setProjectName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [website, setWebsite] = useState('');\r\n  const [twitter, setTwitter] = useState('');\r\n  const [discord, setDiscord] = useState('');\r\n  const [openSea, setOpenSea] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addProject, { error }] = useMutation(ADD_PROJECT, {\r\n    update(cache, { data: { addProject } }) {\r\n      try {\r\n        const { projects } = cache.readQuery({ query: QUERY_PROJECTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_PROJECTS,\r\n          data: { projects: [addProject, ...projects] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addProject({\r\n        variables: {\r\n          projectName,\r\n          description,\r\n          website,\r\n          twitter,\r\n          discord,\r\n          openSea,\r\n        },\r\n      });\r\n\r\n      setProjectName('');\r\n      setDescription('');\r\n      setReleaseDate('');\r\n      setWebsite('');\r\n      setTwitter('');\r\n      setDiscord('');\r\n      setOpenSea('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case \"projectName\":\r\n        setProjectName(value);\r\n        setCharacterCount(value.length);\r\n        break;\r\n      case \"description\":\r\n        setDescription(value);\r\n        setCharacterCount(value.length);\r\n        break;\r\n      case \"website\":\r\n        setWebsite(value);\r\n        setCharacterCount(value.length);\r\n        break;\r\n      case \"twitter\":\r\n        setTwitter(value);\r\n        setCharacterCount(value.length);\r\n        break;\r\n      case \"discord\":\r\n        setDiscord(value);\r\n        setCharacterCount(value.length);\r\n        break;\r\n      case \"OpenSea\":\r\n        setOpenSea(value);\r\n        setCharacterCount(value.length);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n  return (\r\n    <Flex\r\n      minH={'100vh'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      bg={useColorModeValue('gray.50', 'gray.800')}>\r\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\r\n        <Stack align={'center'}>\r\n          <Heading fontSize={'3xl'}>Let us know what you project is all about!</Heading>\r\n          <Heading fontSize={'1xl'}>Fill out the sections below and your project will be ready to be displayed to our community!</Heading>\r\n        </Stack>\r\n        {/*{Auth.loggedIn() ? (   */}\r\n          <Box\r\n            rounded={'lg'}\r\n            bg={useColorModeValue('white', 'gray.700')}\r\n            boxShadow={'lg'}\r\n            p={8}>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <Stack spacing={4}>\r\n                <FormControl id=\"name\">\r\n                  <FormLabel>Project Name</FormLabel>\r\n                  <Input \r\n                    className=\"form-input\"\r\n                    id=\"form-input\"\r\n                    placeholder=\"Please enter the name of your project\"\r\n                    name=\"projectName\"\r\n                    type=\"text\"\r\n                    value={projectName}\r\n                    onChange={handleChange} \r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"description\">\r\n                  <FormLabel>Project description</FormLabel>\r\n                  <Textarea \r\n                    className=\"form-input\"\r\n                    id=\"form-input\"\r\n                    placeholder=\"Please tell us a little about your project\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={handleChange} \r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"website\">\r\n                  <FormLabel>Website</FormLabel>\r\n                  <Input \r\n                    className=\"form-input\"\r\n                    id=\"form-input\"\r\n                    placeholder=\"Your website URL\"\r\n                    name=\"website\"\r\n                    type=\"url\"\r\n                    value={website}\r\n                    onChange={handleChange} \r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"twitter\">\r\n                  <FormLabel>Twitter</FormLabel>\r\n                  <Input \r\n                    className=\"form-input\"\r\n                    id=\"form-input\"\r\n                    placeholder=\"Please enter the twitter associated with your project\"\r\n                    name=\"twitter\"\r\n                    type=\"url\"\r\n                    value={twitter}\r\n                    onChange={handleChange} \r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"discord\">\r\n                  <FormLabel>Discord</FormLabel>\r\n                  <Input \r\n                    className=\"form-input\"\r\n                    id=\"form-input\"\r\n                    placeholder=\"Please your projects dirscord server\"\r\n                    name=\"discord\"\r\n                    type=\"url\"\r\n                    value={discord}\r\n                    onChange={handleChange} \r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"opensea\">\r\n                  <FormLabel>OpenSea</FormLabel>\r\n                  <Input \r\n                    className=\"form-input\"\r\n                    id=\"form-input\"\r\n                    placeholder=\"Please enter the official project page on OpenSea\"\r\n                    name=\"OpenSea\"\r\n                    type=\"url\"\r\n                    value={openSea}\r\n                    onChange={handleChange} \r\n                  />\r\n                </FormControl>\r\n                <Stack spacing={10}>\r\n                  <Button\r\n                    type=\"sumbmit\"\r\n                    bg={'pink.500'}\r\n                    color={'white'}\r\n                    _hover={{\r\n                      bg: 'pink.400',\r\n                    }}>\r\n                    Sign Up\r\n                  </Button>\r\n                </Stack>\r\n              </Stack>\r\n            </form>\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </Box>\r\n        {/*}) : (\r\n          <p>\r\n            You need to be logged in to share your project.\r\n            <Link to=\"/login\"> login</Link> or <Link to=\"/signup\">signup to continue!</Link>\r\n          </p>\r\n        )}*/}\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default ProjectForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  StackDivider,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  Image,\r\n  SimpleGrid,\r\n} from '@chakra-ui/react';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  if (projects && !projects.length) {\r\n    return <h3>Can't find any articles!</h3>\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      minH={'20vh'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      bg={useColorModeValue('gray.50', 'gray.800')}>\r\n      <Stack spacing={8} mx={'auto'} w={'80%'} py={12} px={1}>\r\n        <Stack align={'center'}>\r\n          <Heading fontSize={'3xl'}>Explore the lastest Projects Added!</Heading>\r\n        </Stack>\r\n        <VStack\r\n          divider={<StackDivider borderColor=\"gray.200\" />}\r\n          spacing={4}\r\n          align=\"stretch\"\r\n        >\r\n          {projects.map((projects) => (\r\n            <SimpleGrid>\r\n              <Box \r\n                rounded={'lg'}\r\n                boxShadow={'lg'}\r\n                key={projects._id}\r\n                bg={useColorModeValue('gray.50', 'purple.800')}\r\n                \r\n              >\r\n                <Image src={''} alt={'NFT examples'} left={''} boxSize=\"200px\" />\r\n                <Heading fontSize={'2x1'} textAlign={'center'} right={''}>{projects.projectName}</Heading>\r\n                <h3 fontSize={'1x1'} align={'center'} right={''}>{projects.description}</h3>\r\n                <div>\r\n                  <a href={projects.website}>\r\n                    <span>{projects.website}</span>\r\n                  </a>\r\n                  <a href={projects.discord}>\r\n                    <Image src={'../assets/Discord-Logo-Color.png'}/>\r\n                    <span>Discord</span>\r\n                  </a>\r\n                  <a href={projects.twitter}>\r\n                    <Image src={'../assets/twitter.png'}/>\r\n                    <span>{projects.twitter}</span>\r\n                  </a>\r\n                  <a href={projects.openSea}>\r\n                    <Image src={'../assets/OpenSea-Logomark-Blue.png'}/>\r\n                    <span>OpenSea</span>\r\n                  </a>\r\n                </div>\r\n              </Box>\r\n            </SimpleGrid>\r\n          ))}\r\n        </VStack>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  StackDivider,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  Image,\r\n} from '@chakra-ui/react';\r\n\r\nimport ProjectList from '../components/ProjectList';\r\nimport { QUERY_PROJECTS } from '../utils/queries';\r\n\r\nconst ExploreNFTs = () => {\r\n  const { loading, data } = useQuery(QUERY_PROJECTS);\r\n  const projects = data?.projects || [];\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n        >\r\n        </div>\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ProjectList\r\n              projects={projects}\r\n              title=\"Latest NFT Projects Added!\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ExploreNFTs;","import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport NavBar from './components/NavBar';\r\n//import ProjectForm from './components/ProjectForm';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport UploadForm from './pages/UploadForm';\r\nimport ExploreNFTs from './pages/ExploreNFTs';\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n//Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <NavBar />\r\n        <div className=\"container\">\r\n          <Route exact path=\"/explore\">\r\n            <ExploreNFTs />\r\n          </Route>\r\n          <Route exact path=\"/share\">\r\n            <UploadForm />\r\n          </Route>\r\n          <Route exact path =\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/signUp\">\r\n            <Signup />\r\n          </Route>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <App />\r\n  </ChakraProvider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}